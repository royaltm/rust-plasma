var N=null,E="",T="t",U="u",searchIndex={};
var r_0a="phaseampcfg",r_1a="phaseamp",r_2a="clone",r_3a="rgbiter",r_4a="rgbaiter",r_5a="formatter",r_6a="fmt",r_7a="__rhst",r_8a="intermediate_h_len",r_9a="Returns the number of intermediate horizontal values.",r_Aa="try_into",r_Ab="PlasmaLineCalcExp",r_Ba="type_id",r_Bb="PlasmaMixIterExp",r_Ca="typeid",r_Cb="PlasmaInterCalcProducerEx",r_Da="from",r_Db="PlasmaLineCalcFireH",r_Ea="into_iter",r_Eb="PlasmaLineCalcFireV",r_Fa="into",r_Fb="PlasmaMixIterFireH",r_Ga="calculate",r_Gb="PlasmaMixIterFireV",r_Ha="mix_pixels",r_Hb="PlasmaInterCalcProducerFire",r_Ia="compose_h_iter",r_Ib="PhaseAmpsQuadIter",r_Ja="compose_v_iter",r_Jb="PhaseAmpsTripleIter",r_Ka="delta_phase_abs_max",r_Kb="PhaseAmpsPairIter",r_La="delta_delta_phase_abs_max",r_Lb="F32PaQuadIter",r_Ma="phase",r_Mb="F32PaTripleIter",r_Na="set_phase",r_Nb="F32PaPairIter",r_Oa="amplitude",r_Ob="F32PaIter",r_Pa="set_amplitude",r_Pb="PixelBufRGB24",r_Qa="put_pixel",r_Qb="PixelBufRGBA8",r_Ra="len",r_Sa="option",r_Ta="size_hint",r_Ua="next",r_Va="default",r_Wa="plasmamixer",r_Xa="bool",r_Ya="plasmamixerexp",r_Za="plasmamixerfire",r_aa="plasma",r_ab="intermediate_v_len",r_ba="Provides a default implementation of a…",r_bb="Returns the number of intermediate vertical values.",r_ca="A default implementation of a [Mixer] is provided for this…",r_cb="export",r_da="Provides a default implementation of an iterator of…",r_db="PIXEL_BYTES",r_ea="f32",r_eb="Specifies how many bytes a single pixel occupies.",r_fa="pixelrgb",r_fb="PixelRgb",r_ga="self",r_gb="Plasma",r_ha="new",r_hb="PlasmaMixer",r_ia="update",r_ib="PlasmaMixerExp",r_ja="render_part",r_jb="PlasmaMixerFire",r_ka="A convenient type to be used with…",r_kb="PhaseAmpCfg",r_la="This type should be an array of the type T for an…",r_lb="PhaseAmp",r_ma="usize",r_mb="IntermediateCalculator",r_na="Provide an iterator implementation which produce…",r_nb="Mixer",r_oa="Provide an implementation of a [IntermediateCalculator]…",r_ob="IntermediateCalculatorProducer",r_pa="Should return an instance of a…",r_pb="PhaseAmpConfig",r_qa="min_steps",r_qb="PhaseAmpAccess",r_ra="max_steps",r_rb="PhaseAmpDataExp",r_sa="export_phase_amps",r_sb="PhaseAmpsSelect",r_ta="import_phase_amps",r_tb="PixelBuffer",r_ua="result",r_ub="ToColor8",r_va="to_owned",r_vb="RgbIter",r_wa="clone_into",r_wb="RgbaIter",r_xa="try_from",r_xb="PlasmaLineCalc",r_ya="borrow",r_yb="PlasmaMixIter",r_za="borrow_mut",r_zb="PlasmaInterCalcProducer";

searchIndex[r_aa]={"doc":"A [Plasma] struct and tools for rendering animated…","i":[[3,r_fb,r_aa,"A struct representing one or more pixels in the linear RGB…",N,N],[12,"r",E,E,0,N],[12,"g",E,E,0,N],[12,"b",E,E,0,N],[3,r_vb,E,"An iterator of [PixelRgb] color components.",N,N],[3,r_wb,E,"An iterator of [PixelRgb] color components plus an alpha…",N,N],[3,r_hb,E,r_ca,N,N],[3,r_xb,E,r_ba,N,N],[3,r_yb,E,r_da,N,N],[3,r_zb,E,r_ba,N,N],[3,r_ib,E,r_ca,N,N],[3,r_Ab,E,r_ba,N,N],[3,r_Bb,E,r_da,N,N],[3,r_Cb,E,r_ba,N,N],[3,r_jb,E,r_ca,N,N],[3,r_Db,E,r_ba,N,N],[3,r_Eb,E,r_ba,N,N],[3,r_Fb,E,r_da,N,N],[3,r_Gb,E,r_da,N,N],[3,r_Hb,E,r_ba,N,N],[3,r_kb,E,"Holds parameters of phase and amplitude changes for…",N,N],[3,r_lb,E,"Holds a phase and an amplitude along with their animation…",N,N],[3,r_Ib,E,E,N,N],[3,r_Jb,E,E,N,N],[3,r_Kb,E,E,N,N],[3,r_Lb,E,E,N,N],[3,r_Mb,E,E,N,N],[3,r_Nb,E,E,N,N],[3,r_Ob,E,E,N,N],[3,r_Pb,E,"A [PixelBuffer] tool for a RGB24 buffer (3 bytes/pixel:…",N,N],[3,r_Qb,E,"A [PixelBuffer] tool for a RGBA8 buffer (4 bytes/pixel:…",N,N],[3,r_gb,E,"The struct that holds the meta information about current…",N,N],[12,"pixel_width",E,"The plasma pixel width",1,N],[12,"pixel_height",E,"The plasma pixel height",1,N],[5,r_ja,E,"Renders the part of the plasma into the provided `buffer`…",N,N],[11,r_ha,E,"Creates an instance of [PixelRgb] from RGB color components.",0,[[[r_ea],[r_ea],[r_ea]],[r_fa]]],[11,"iter_rgb_values",E,"Creates a [RgbIter] from this instance of [PixelRgb].",0,[[[r_ga]],[r_3a]]],[11,"iter_rgba_values",E,"Creates a [RgbaIter] from this instance of [PixelRgb].",0,[[[r_ga],[r_ea]],[r_4a]]],[11,"from_hsv",E,"Creates an instance of a [PixelRgb] from HSV color…",0,[[[r_ea],[r_ea],[r_ea]],[r_fa]]],[11,r_ha,E,E,2,[[],[r_Wa]]],[11,r_ha,E,E,3,[[],[r_Ya]]],[11,r_ha,E,E,4,[[],[r_Za]]],[11,r_ha,E,"Creates new [PhaseAmpCfg] instance from the provided…",5,[[[r_ea],[r_ea]],[r_ga]]],[11,r_ha,E,"Creates randomized single phase and amplitude pair.",6,[[["c"],["r"]],[r_ga]]],[11,r_ia,E,"Performs a one step update of the phase and amplitude pair…",6,[[[r_ga],["c"],["r"]]]],[11,r_ha,E,"Creates new plasma instance.",1,[[["u32"],["u32"],[r_0a],["r"]],[r_ga]]],[11,r_ia,E,"Animates the plasma by modifying the internal [PhaseAmp]…",1,[[[r_ga],["r"]]]],[11,"render",E,"Renders the plasma into the provided `buffer`.",1,N],[11,r_ja,E,"Renders the part of the plasma into the provided `buffer`.",1,N],[11,r_ta,E,"Import the internal plasma state from a slice of 32bit…",1,N],[11,r_sa,E,"Exports the internal plasma state into the [Vec] of 32bit…",1,[[[r_ga],["vec"]]]],[11,r_qa,E,E,1,[[[r_ga]],[r_ea]]],[11,r_ra,E,E,1,[[[r_ga]],[r_ea]]],[6,"PlasmaICP",E,r_ka,N,N],[6,"PlasmaICPExtPa",E,r_ka,N,N],[6,"PlasmaICPExp",E,E,N,N],[6,"PlasmaICPExpExtPa",E,E,N,N],[6,"PlasmaICPFire",E,E,N,N],[6,"PlasmaICPFireExtPa",E,E,N,N],[8,r_mb,E,"Implementations of this trait should compute the vertical…",N,N],[10,r_Ga,E,"Computes an intermediate data for a given angle.",7,[[[r_ga],[T]],[T]]],[8,r_nb,E,"Implementations of this trait should compute the color of…",N,N],[16,"IntermediateH",E,r_la,8,N],[16,"IntermediateV",E,r_la,8,N],[11,r_8a,E,r_9a,8,[[],[r_ma]]],[11,r_ab,E,r_bb,8,[[],[r_ma]]],[10,r_Ha,E,"The implementors should compute a pixel and send it as an…",8,N],[8,r_ob,E,"Implementations of this trait should produce an iterator…",N,N],[16,"CalcIterH",E,r_na,9,N],[16,"CalcIterV",E,r_na,9,N],[16,"LineCalcH",E,r_oa,9,N],[16,"LineCalcV",E,r_oa,9,N],[10,r_Ia,E,r_pa,9,N],[10,r_Ja,E,r_pa,9,N],[8,r_pb,E,"A trait for querying parameters of phase and amplitude…",N,N],[10,r_qa,E,E,10,[[[r_ga]],[r_ea]]],[10,r_ra,E,E,10,[[[r_ga]],[r_ea]]],[10,r_Ka,E,E,10,[[[r_ga]],[r_ea]]],[10,r_La,E,E,10,[[[r_ga]],[r_ea]]],[8,r_qb,E,"A trait for querying and updating phase'n'amplitude",N,N],[10,r_Ma,E,E,11,[[[r_ga]],[r_ea]]],[10,r_Oa,E,E,11,[[[r_ga]],[r_ea]]],[10,r_Na,E,E,11,[[[r_ga],[r_ea]]]],[10,r_Pa,E,E,11,[[[r_ga],[r_ea]]]],[11,r_cb,E,E,11,[[[r_ga],["vec"]]]],[8,r_rb,E,"A trait that allows importing and exporting of…",N,N],[10,r_sa,E,E,12,[[[r_ga],["vec"]]]],[10,r_ta,E,E,12,N],[8,r_sb,E,"A trait that allows selecting a subset of…",N,N],[16,"Item",E,E,13,N],[16,"IterOne",E,E,13,N],[16,"IterPair",E,E,13,N],[16,"IterTriple",E,E,13,N],[16,"IterQuad",E,E,13,N],[10,"select",E,"The range should always be bounded. # Panics",13,[[[r_ga],["range",[r_ma]]],[r_ga]]],[10,"iter_phase_amps",E,E,13,N],[10,"iter_pa_pairs",E,E,13,N],[10,"iter_pa_triples",E,E,13,N],[10,"iter_pa_quads",E,E,13,N],[8,r_tb,E,"The trait for putting pixels into byte buffers.",N,N],[18,r_db,E,r_eb,14,N],[10,r_Qa,E,"Puts bytes from a `pixel` into the provided `buffer` using…",14,[[["i"],[r_fa]]]],[8,r_ub,E,"Provides a method of converting color part from a `f32`…",N,N],[10,"to_color_u8clamped",E,E,15,[[[r_ga]],["u8"]]],[8,"ICProducer",E,"A convenient trait alias for plasma render methods.",N,N],[11,r_Da,E,E,0,[[[T]],[T]]],[11,r_Fa,E,E,0,[[[r_ga]],[U]]],[11,r_va,E,E,0,[[[r_ga]],[T]]],[11,r_wa,E,E,0,N],[11,r_xa,E,E,0,[[[U]],[r_ua]]],[11,r_ya,E,E,0,[[[r_ga]],[T]]],[11,r_za,E,E,0,[[[r_ga]],[T]]],[11,r_Aa,E,E,0,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,0,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,16,[[[T]],[T]]],[11,r_Ea,E,E,16,[[[r_ga]],["i"]]],[11,r_Fa,E,E,16,[[[r_ga]],[U]]],[11,r_va,E,E,16,[[[r_ga]],[T]]],[11,r_wa,E,E,16,N],[11,r_xa,E,E,16,[[[U]],[r_ua]]],[11,r_ya,E,E,16,[[[r_ga]],[T]]],[11,r_za,E,E,16,[[[r_ga]],[T]]],[11,r_Aa,E,E,16,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,16,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,17,[[[T]],[T]]],[11,r_Ea,E,E,17,[[[r_ga]],["i"]]],[11,r_Fa,E,E,17,[[[r_ga]],[U]]],[11,r_va,E,E,17,[[[r_ga]],[T]]],[11,r_wa,E,E,17,N],[11,r_xa,E,E,17,[[[U]],[r_ua]]],[11,r_ya,E,E,17,[[[r_ga]],[T]]],[11,r_za,E,E,17,[[[r_ga]],[T]]],[11,r_Aa,E,E,17,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,17,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,2,[[[T]],[T]]],[11,r_Fa,E,E,2,[[[r_ga]],[U]]],[11,r_va,E,E,2,[[[r_ga]],[T]]],[11,r_wa,E,E,2,N],[11,r_xa,E,E,2,[[[U]],[r_ua]]],[11,r_ya,E,E,2,[[[r_ga]],[T]]],[11,r_za,E,E,2,[[[r_ga]],[T]]],[11,r_Aa,E,E,2,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,2,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,18,[[[T]],[T]]],[11,r_Fa,E,E,18,[[[r_ga]],[U]]],[11,r_xa,E,E,18,[[[U]],[r_ua]]],[11,r_ya,E,E,18,[[[r_ga]],[T]]],[11,r_za,E,E,18,[[[r_ga]],[T]]],[11,r_Aa,E,E,18,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,18,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,19,[[[T]],[T]]],[11,r_Ea,E,E,19,[[[r_ga]],["i"]]],[11,r_Fa,E,E,19,[[[r_ga]],[U]]],[11,r_xa,E,E,19,[[[U]],[r_ua]]],[11,r_ya,E,E,19,[[[r_ga]],[T]]],[11,r_za,E,E,19,[[[r_ga]],[T]]],[11,r_Aa,E,E,19,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,19,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,20,[[[T]],[T]]],[11,r_Fa,E,E,20,[[[r_ga]],[U]]],[11,r_xa,E,E,20,[[[U]],[r_ua]]],[11,r_ya,E,E,20,[[[r_ga]],[T]]],[11,r_za,E,E,20,[[[r_ga]],[T]]],[11,r_Aa,E,E,20,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,20,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,3,[[[T]],[T]]],[11,r_Fa,E,E,3,[[[r_ga]],[U]]],[11,r_va,E,E,3,[[[r_ga]],[T]]],[11,r_wa,E,E,3,N],[11,r_xa,E,E,3,[[[U]],[r_ua]]],[11,r_ya,E,E,3,[[[r_ga]],[T]]],[11,r_za,E,E,3,[[[r_ga]],[T]]],[11,r_Aa,E,E,3,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,3,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,21,[[[T]],[T]]],[11,r_Fa,E,E,21,[[[r_ga]],[U]]],[11,r_xa,E,E,21,[[[U]],[r_ua]]],[11,r_ya,E,E,21,[[[r_ga]],[T]]],[11,r_za,E,E,21,[[[r_ga]],[T]]],[11,r_Aa,E,E,21,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,21,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,22,[[[T]],[T]]],[11,r_Ea,E,E,22,[[[r_ga]],["i"]]],[11,r_Fa,E,E,22,[[[r_ga]],[U]]],[11,r_xa,E,E,22,[[[U]],[r_ua]]],[11,r_ya,E,E,22,[[[r_ga]],[T]]],[11,r_za,E,E,22,[[[r_ga]],[T]]],[11,r_Aa,E,E,22,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,22,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,23,[[[T]],[T]]],[11,r_Fa,E,E,23,[[[r_ga]],[U]]],[11,r_xa,E,E,23,[[[U]],[r_ua]]],[11,r_ya,E,E,23,[[[r_ga]],[T]]],[11,r_za,E,E,23,[[[r_ga]],[T]]],[11,r_Aa,E,E,23,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,23,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,4,[[[T]],[T]]],[11,r_Fa,E,E,4,[[[r_ga]],[U]]],[11,r_va,E,E,4,[[[r_ga]],[T]]],[11,r_wa,E,E,4,N],[11,r_xa,E,E,4,[[[U]],[r_ua]]],[11,r_ya,E,E,4,[[[r_ga]],[T]]],[11,r_za,E,E,4,[[[r_ga]],[T]]],[11,r_Aa,E,E,4,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,4,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,24,[[[T]],[T]]],[11,r_Fa,E,E,24,[[[r_ga]],[U]]],[11,r_xa,E,E,24,[[[U]],[r_ua]]],[11,r_ya,E,E,24,[[[r_ga]],[T]]],[11,r_za,E,E,24,[[[r_ga]],[T]]],[11,r_Aa,E,E,24,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,24,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,25,[[[T]],[T]]],[11,r_Fa,E,E,25,[[[r_ga]],[U]]],[11,r_xa,E,E,25,[[[U]],[r_ua]]],[11,r_ya,E,E,25,[[[r_ga]],[T]]],[11,r_za,E,E,25,[[[r_ga]],[T]]],[11,r_Aa,E,E,25,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,25,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,26,[[[T]],[T]]],[11,r_Ea,E,E,26,[[[r_ga]],["i"]]],[11,r_Fa,E,E,26,[[[r_ga]],[U]]],[11,r_xa,E,E,26,[[[U]],[r_ua]]],[11,r_ya,E,E,26,[[[r_ga]],[T]]],[11,r_za,E,E,26,[[[r_ga]],[T]]],[11,r_Aa,E,E,26,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,26,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,27,[[[T]],[T]]],[11,r_Ea,E,E,27,[[[r_ga]],["i"]]],[11,r_Fa,E,E,27,[[[r_ga]],[U]]],[11,r_xa,E,E,27,[[[U]],[r_ua]]],[11,r_ya,E,E,27,[[[r_ga]],[T]]],[11,r_za,E,E,27,[[[r_ga]],[T]]],[11,r_Aa,E,E,27,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,27,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,28,[[[T]],[T]]],[11,r_Fa,E,E,28,[[[r_ga]],[U]]],[11,r_xa,E,E,28,[[[U]],[r_ua]]],[11,r_ya,E,E,28,[[[r_ga]],[T]]],[11,r_za,E,E,28,[[[r_ga]],[T]]],[11,r_Aa,E,E,28,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,28,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,5,[[[T]],[T]]],[11,r_Fa,E,E,5,[[[r_ga]],[U]]],[11,r_va,E,E,5,[[[r_ga]],[T]]],[11,r_wa,E,E,5,N],[11,r_xa,E,E,5,[[[U]],[r_ua]]],[11,r_ya,E,E,5,[[[r_ga]],[T]]],[11,r_za,E,E,5,[[[r_ga]],[T]]],[11,r_Aa,E,E,5,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,5,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,6,[[[T]],[T]]],[11,r_Fa,E,E,6,[[[r_ga]],[U]]],[11,r_va,E,E,6,[[[r_ga]],[T]]],[11,r_wa,E,E,6,N],[11,r_xa,E,E,6,[[[U]],[r_ua]]],[11,r_ya,E,E,6,[[[r_ga]],[T]]],[11,r_za,E,E,6,[[[r_ga]],[T]]],[11,r_Aa,E,E,6,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,6,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,29,[[[T]],[T]]],[11,r_Ea,E,E,29,[[[r_ga]],["i"]]],[11,r_Fa,E,E,29,[[[r_ga]],[U]]],[11,r_xa,E,E,29,[[[U]],[r_ua]]],[11,r_ya,E,E,29,[[[r_ga]],[T]]],[11,r_za,E,E,29,[[[r_ga]],[T]]],[11,r_Aa,E,E,29,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,29,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,30,[[[T]],[T]]],[11,r_Ea,E,E,30,[[[r_ga]],["i"]]],[11,r_Fa,E,E,30,[[[r_ga]],[U]]],[11,r_xa,E,E,30,[[[U]],[r_ua]]],[11,r_ya,E,E,30,[[[r_ga]],[T]]],[11,r_za,E,E,30,[[[r_ga]],[T]]],[11,r_Aa,E,E,30,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,30,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,31,[[[T]],[T]]],[11,r_Ea,E,E,31,[[[r_ga]],["i"]]],[11,r_Fa,E,E,31,[[[r_ga]],[U]]],[11,r_xa,E,E,31,[[[U]],[r_ua]]],[11,r_ya,E,E,31,[[[r_ga]],[T]]],[11,r_za,E,E,31,[[[r_ga]],[T]]],[11,r_Aa,E,E,31,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,31,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,32,[[[T]],[T]]],[11,r_Ea,E,E,32,[[[r_ga]],["i"]]],[11,r_Fa,E,E,32,[[[r_ga]],[U]]],[11,r_xa,E,E,32,[[[U]],[r_ua]]],[11,r_ya,E,E,32,[[[r_ga]],[T]]],[11,r_za,E,E,32,[[[r_ga]],[T]]],[11,r_Aa,E,E,32,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,32,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,33,[[[T]],[T]]],[11,r_Ea,E,E,33,[[[r_ga]],["i"]]],[11,r_Fa,E,E,33,[[[r_ga]],[U]]],[11,r_xa,E,E,33,[[[U]],[r_ua]]],[11,r_ya,E,E,33,[[[r_ga]],[T]]],[11,r_za,E,E,33,[[[r_ga]],[T]]],[11,r_Aa,E,E,33,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,33,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,34,[[[T]],[T]]],[11,r_Ea,E,E,34,[[[r_ga]],["i"]]],[11,r_Fa,E,E,34,[[[r_ga]],[U]]],[11,r_xa,E,E,34,[[[U]],[r_ua]]],[11,r_ya,E,E,34,[[[r_ga]],[T]]],[11,r_za,E,E,34,[[[r_ga]],[T]]],[11,r_Aa,E,E,34,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,34,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,35,[[[T]],[T]]],[11,r_Ea,E,E,35,[[[r_ga]],["i"]]],[11,r_Fa,E,E,35,[[[r_ga]],[U]]],[11,r_xa,E,E,35,[[[U]],[r_ua]]],[11,r_ya,E,E,35,[[[r_ga]],[T]]],[11,r_za,E,E,35,[[[r_ga]],[T]]],[11,r_Aa,E,E,35,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,35,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,36,[[[T]],[T]]],[11,r_Fa,E,E,36,[[[r_ga]],[U]]],[11,r_xa,E,E,36,[[[U]],[r_ua]]],[11,r_ya,E,E,36,[[[r_ga]],[T]]],[11,r_za,E,E,36,[[[r_ga]],[T]]],[11,r_Aa,E,E,36,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,36,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,37,[[[T]],[T]]],[11,r_Fa,E,E,37,[[[r_ga]],[U]]],[11,r_xa,E,E,37,[[[U]],[r_ua]]],[11,r_ya,E,E,37,[[[r_ga]],[T]]],[11,r_za,E,E,37,[[[r_ga]],[T]]],[11,r_Aa,E,E,37,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,37,[[[r_ga]],[r_Ca]]],[11,r_Da,E,E,1,[[[T]],[T]]],[11,r_Fa,E,E,1,[[[r_ga]],[U]]],[11,r_va,E,E,1,[[[r_ga]],[T]]],[11,r_wa,E,E,1,N],[11,r_xa,E,E,1,[[[U]],[r_ua]]],[11,r_ya,E,E,1,[[[r_ga]],[T]]],[11,r_za,E,E,1,[[[r_ga]],[T]]],[11,r_Aa,E,E,1,[[[r_ga]],[r_ua]]],[11,r_Ba,E,E,1,[[[r_ga]],[r_Ca]]],[11,r_Ga,E,E,18,[[[r_ga],[r_ea]],[r_ea]]],[11,r_Ga,E,E,21,[[[r_ga],[r_ea]],[r_ea]]],[11,r_Ga,E,E,24,[[[r_ga],[r_ea]],[r_ea]]],[11,r_Ga,E,E,25,[[[r_ga],[r_ea]],[r_ea]]],[11,r_Ha,E,E,2,N],[11,r_Ha,E,E,3,N],[11,r_Ha,E,E,4,N],[11,r_Ia,E,E,20,N],[11,r_Ja,E,E,20,N],[11,r_Ia,E,E,23,N],[11,r_Ja,E,E,23,N],[11,r_Ia,E,E,28,N],[11,r_Ja,E,E,28,N],[11,r_qa,E,E,5,[[[r_ga]],[r_ea]]],[11,r_ra,E,E,5,[[[r_ga]],[r_ea]]],[11,r_Ka,E,E,5,[[[r_ga]],[r_ea]]],[11,r_La,E,E,5,[[[r_ga]],[r_ea]]],[11,r_Ma,E,E,6,[[[r_ga]],[r_ea]]],[11,r_Na,E,E,6,[[[r_ga],[r_ea]]]],[11,r_Oa,E,E,6,[[[r_ga]],[r_ea]]],[11,r_Pa,E,E,6,[[[r_ga],[r_ea]]]],[11,r_Qa,E,E,36,[[["i"],[r_fa]]]],[11,r_Qa,E,E,37,[[["i"],[r_fa]]]],[11,r_Ra,E,E,16,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,17,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,19,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,22,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,26,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,27,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,29,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,30,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,31,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,32,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,33,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,34,[[[r_ga]],[r_ma]]],[11,r_Ra,E,E,35,[[[r_ga]],[r_ma]]],[11,r_Ua,E,E,16,[[[r_ga]],[r_Sa,[r_ea]]]],[11,r_Ta,E,E,16,N],[11,r_Ua,E,E,17,[[[r_ga]],[r_Sa,[r_ea]]]],[11,r_Ta,E,E,17,N],[11,r_Ua,E,E,19,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,19,N],[11,r_Ua,E,E,22,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,22,N],[11,r_Ua,E,E,26,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,26,N],[11,r_Ua,E,E,27,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,27,N],[11,r_Ua,E,E,29,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,29,N],[11,r_Ua,E,E,30,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,30,N],[11,r_Ua,E,E,31,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,31,N],[11,r_Ua,E,E,32,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,32,N],[11,r_Ua,E,E,33,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,33,N],[11,r_Ua,E,E,34,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,34,N],[11,r_Ua,E,E,35,[[[r_ga]],[r_Sa]]],[11,r_Ta,E,E,35,N],[11,r_Va,E,E,0,[[],[r_fa]]],[11,r_Va,E,E,6,[[],[r_1a]]],[11,r_Va,E,E,5,[[],[r_ga]]],[11,"eq",E,E,0,[[[r_ga],[r_fa]],[r_Xa]]],[11,"ne",E,E,0,[[[r_ga],[r_fa]],[r_Xa]]],[11,"eq",E,E,2,[[[r_ga],[r_Wa]],[r_Xa]]],[11,"eq",E,E,3,[[[r_ga],[r_Ya]],[r_Xa]]],[11,"eq",E,E,4,[[[r_ga],[r_Za]],[r_Xa]]],[11,"eq",E,E,5,[[[r_ga],[r_0a]],[r_Xa]]],[11,"ne",E,E,5,[[[r_ga],[r_0a]],[r_Xa]]],[11,"eq",E,E,6,[[[r_ga],[r_1a]],[r_Xa]]],[11,"ne",E,E,6,[[[r_ga],[r_1a]],[r_Xa]]],[11,"eq",E,E,1,[[[r_ga],[r_aa]],[r_Xa]]],[11,"ne",E,E,1,[[[r_ga],[r_aa]],[r_Xa]]],[11,r_2a,E,E,0,[[[r_ga]],[r_fa]]],[11,r_2a,E,E,16,[[[r_ga]],[r_3a]]],[11,r_2a,E,E,17,[[[r_ga]],[r_4a]]],[11,r_2a,E,E,2,[[[r_ga]],[r_Wa]]],[11,r_2a,E,E,3,[[[r_ga]],[r_Ya]]],[11,r_2a,E,E,4,[[[r_ga]],[r_Za]]],[11,r_2a,E,E,5,[[[r_ga]],[r_0a]]],[11,r_2a,E,E,6,[[[r_ga]],[r_1a]]],[11,r_2a,E,E,1,[[[r_ga]],[r_aa]]],[11,r_6a,E,E,0,[[[r_ga],[r_5a]],[r_ua]]],[11,r_6a,E,E,2,[[[r_ga],[r_5a]],[r_ua]]],[11,r_6a,E,E,3,[[[r_ga],[r_5a]],[r_ua]]],[11,r_6a,E,E,4,[[[r_ga],[r_5a]],[r_ua]]],[11,r_6a,E,E,5,[[[r_ga],[r_5a]],[r_ua]]],[11,r_6a,E,E,6,[[[r_ga],[r_5a]],[r_ua]]],[11,r_6a,E,E,1,[[[r_ga],[r_5a]],[r_ua]]],[11,"add",E,E,0,[[[r_ga],[r_fa]],[r_fa]]],[11,"sub",E,E,0,[[[r_ga],[r_fa]],[r_fa]]],[11,"mul",E,E,0,[[[r_ga],[r_7a]],[r_fa]]],[11,"div",E,E,0,[[[r_ga],[r_7a]],[r_fa]]],[11,"rem",E,E,0,[[[r_ga],[r_7a]],[r_fa]]],[11,"neg",E,E,0,[[[r_ga]],[r_fa]]],[11,"add_assign",E,E,0,[[[r_ga],[r_fa]]]],[11,"sub_assign",E,E,0,[[[r_ga],[r_fa]]]],[11,"mul_assign",E,E,0,[[[r_ga],[r_7a]]]],[11,"div_assign",E,E,0,[[[r_ga],[r_7a]]]],[11,"rem_assign",E,E,0,[[[r_ga],[r_7a]]]],[11,r_8a,E,r_9a,8,[[],[r_ma]]],[11,r_ab,E,r_bb,8,[[],[r_ma]]],[11,r_cb,E,E,11,[[[r_ga],["vec"]]]],[18,r_db,E,r_eb,14,N]],"p":[[3,r_fb],[3,r_gb],[3,r_hb],[3,r_ib],[3,r_jb],[3,r_kb],[3,r_lb],[8,r_mb],[8,r_nb],[8,r_ob],[8,r_pb],[8,r_qb],[8,r_rb],[8,r_sb],[8,r_tb],[8,r_ub],[3,r_vb],[3,r_wb],[3,r_xb],[3,r_yb],[3,r_zb],[3,r_Ab],[3,r_Bb],[3,r_Cb],[3,r_Db],[3,r_Eb],[3,r_Fb],[3,r_Gb],[3,r_Hb],[3,r_Ib],[3,r_Jb],[3,r_Kb],[3,r_Lb],[3,r_Mb],[3,r_Nb],[3,r_Ob],[3,r_Pb],[3,r_Qb]]};
initSearch(searchIndex);addSearchOptions(searchIndex);