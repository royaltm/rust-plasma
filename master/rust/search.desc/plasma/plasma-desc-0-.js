searchState.loadedDescShard("plasma", 0, "A Plasma struct and tools for rendering animated eye-candy …\nProvide an iterator implementation which produce …\nProvide an iterator implementation which produce …\nA convenient trait alias for plasma render methods.\nImplementations of this trait should compute the vertical …\nImplementations of this trait should produce an iterator …\nThis type should be an array of the type T for an …\nThis type should be an array of the type T for an …\nProvide an implementation of a IntermediateCalculator for …\nProvide an implementation of a IntermediateCalculator for …\nImplementations of this trait should compute the color of …\nSpecifies how many bytes a single plasma pixel occupies.\nHolds a phase and an amplitude along with their animation …\nA trait for querying and updating phase’n’amplitude\nHolds parameters of phase and amplitude changes for …\nA trait for querying parameters of phase and amplitude …\nA trait that allows importing and exporting of phase’n’…\nA trait that allows selecting a subset of phase’n’…\nA PixelBuffer tool for a RGB16 buffer (5-6-5 bits per …\nA PixelBuffer tool for a RGB16 x2 buffer (5-6-5 bits per …\nA PixelBuffer tool for a RGB24 buffer (3 bytes/pixel: red, …\nA PixelBuffer tool for a RGBA32 buffer (4 bytes/pixel: …\nThe trait for putting pixels into byte buffers.\nA struct representing one or more pixels in the linear RGB …\nThe struct that holds the meta information about current …\nA convenient type to be used with …\nA convenient type to be used with …\nProvides a default implementation of a …\nProvides a default implementation of a …\nProvides a default implementation of an iterator of …\nA default implementation of a Mixer is provided for this …\nAn iterator of PixelRgb color components.\nAn iterator of PixelRgb color components plus an alpha …\nProvides a method of converting color part from a <code>f32</code> type …\nComputes an intermediate data for a given angle.\nShould return an instance of a …\nShould return an instance of a …\nExports the internal plasma state into the Vec of 32bit …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an instance of a PixelRgb from HSV color …\nImport the internal plasma state from a slice of 32bit …\nReturns the number of intermediate horizontal values.\nReturns the number of intermediate horizontal values.\nReturns the number of intermediate vertical values.\nReturns the number of intermediate vertical values.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a RgbIter from this instance of PixelRgb.\nCreates a RgbaIter from this instance of PixelRgb.\nThe implementors should compute a pixel and send it as an …\nCreates an instance of PixelRgb from RGB color components.\nCreates new PhaseAmpCfg instance from the provided …\nCreates randomized single phase and amplitude pair.\nCreates new plasma instance.\nThe plasma pixel height\nThe plasma pixel width\nPuts bytes from a <code>pixel</code> into the provided <code>buffer</code> using a …\nRenders the plasma into the provided <code>buffer</code>.\nRenders the part of the plasma into the provided <code>buffer</code> …\nRenders the part of the plasma into the provided <code>buffer</code>.\nThe range should always be bounded.\nPerforms a one step update of the phase and amplitude pair …\nAnimates the plasma by modifying the internal PhaseAmp …")